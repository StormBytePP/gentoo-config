# Build threads
BUILD_THREADS="12"
BUILD_LOAD="12"
MAKEOPTS="-j${BUILD_THREADS} -l${BUILD_LOAD}"

# Frontend options
EMERGE_DEFAULT_OPTS="--ask --autounmask n --jobs=1 --verbose"
FEATURES="parallel-install userfetch parallel-fetch metadata-transfer cgroup userpriv"
GENTOO_MIRRORS=" http://ftp.wh2.tu-dresden.de/pub/mirrors/gentoo/ http://gentoo.mirrors.ovh.net/gentoo-distfiles/ https://mirrors.evowise.com/gentoo/"
USE="clang dbus branding cjk unicode pic icu -bindist python udev caps filecaps xml -ldap"
CMAKE_VERBOSE=OFF
CMAKE_MAKEFILE_GENERATOR=ninja
NINJA_VERBOSE=OFF
L10N="es es-ES"

# Portage folders
PORTDIR="/var/db/repos/portage"
DISTDIR="/tmp/"
PKGDIR="${PORTDIR}/packages"
PORTAGE_TMPDIR="/tmp"

# Compiler custom optimizations
COMPILER_OPTIMIZATION_CPU="-march=native"
COMPILER_OPTIMIZATION_GCC="-fgraphite -fgraphite-identity -floop-block -floop-interchange -floop-parallelize-all -floop-strip-mine -ftree-loop-distribution -ftree-loop-linear"
COMPILER_OPTIMIZATION_CLANG="-Wno-unused-command-line-argument -Wno-unknown-attributes"
COMPILER_OPTIMIZATION_BASE="-O2 -pipe"
COMPILER_OPTIMIZATION_DEBUG="-g -ggdb"
COMPILER_OPTIMIZATION_LTO="-flto=thin"

# Linker cutom optimizations
LINKER_OPTIMIZATION_BASE="${LDFLAGS} -Wl,--sort-common -Wl,-O2"
LINKER_OPTIMIZATION_STRIP="-s"
LINKER_OPTIMIZATION_BFD="-fuse-ld=bfd"
LINKER_OPTIMIZATION_GOLD="-fuse-ld=gold"
LINKER_OPTIMIZATION_LLD="-fuse-ld=lld"

# System variables

## Licenses
ACCEPT_LICENSE="*"

## Environment
GRUB_PLATFORMS="efi-64"
PYTHON_SINGLE_TARGET="python3_8"
PYTHON_TARGETS="python3_8"
RUBY_TARGETS="ruby30"
VIDEO_CARDS="intel i915 i965 nvidia"
INPUT_DEVICES="libinput"
LLVM_TARGETS="X86"
LC_MESSAGES=C

## Compiler definitions (do not touch)
ABI_X86="64"
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3"
ACCEPT_KEYWORDS="~amd64"
CHOST="x86_64-pc-linux-gnu"
CFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU} ${COMPILER_OPTIMIZATION_CLANG}"
CXXFLAGS="${CFLAGS}"
FCFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU}"
FFLAGS="${COMPILER_OPTIMIZATION_BASE} ${COMPILER_OPTIMIZATION_CPU}"
RUSTFLAGS="-Ctarget-cpu=native -Copt-level=2"
LDFLAGS="${LINKER_OPTIMIZATION_BASE} ${LINKER_OPTIMIZATION_STRIP} ${LINKER_OPTIMIZATION_LLD}"
CC="clang"
CXX="clang++"
AR="llvm-ar"
NM="llvm-nm"
RANLIB="llvm-ranlib"
